<div id="container">
    <div >
        <button id="backward"><</button>
        <button id="play">Play</button>
        <button id="forward">></button>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/three@0.131.2/build/three.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/three@0.131.2/examples/js/loaders/GLTFLoader.js"></script>
<script src="https://cdn.jsdelivr.net/npm/three@0.131.2/examples/js/controls/OrbitControls.js"></script>
<style>
    #container {
        width: {{ container_width }}px;
        height: {{ container_height }}px;
    }
    #container div{
        position: relative;
        top: 100%;
        display: flex;
        justify-content: space-around;
        align-items: center;
    }
    #container canvas{
        border-radius: 20px;
    }
</style>
<script>
    window.addEventListener('load', function () {
        const container = document.getElementById('container');
        const scene = new THREE.Scene();
        scene.background = new THREE.Color('{{ bg_hex }}');
        const camera = new THREE.PerspectiveCamera(75, container.clientWidth / container.clientHeight, 0.1, 1000);
        const renderer = new THREE.WebGLRenderer({gammaFactor: 2.2, outputEncoding: THREE.sRGBEncoding});
        renderer.setSize(container.clientWidth, container.clientHeight);
        container.appendChild(renderer.domElement);
        const clock = new THREE.Clock();
        let mixer;
        let action;
        // Создаем загрузчик модели
        const loader = new THREE.GLTFLoader();

        // Загружаем модель
        loader.load('3D model/{{ model3D }}', function (gltf) {
            // Получаем объект с моделью из загруженного gltf-файла
            const model = gltf.scene;

            // Добавляем модель на сцену
            scene.add(model);

            mixer = new THREE.AnimationMixer(model);
            action = mixer.clipAction(gltf.animations[0]);
            action.play();
            action.paused = 1;
        }, function (xhr) {
            console.log((xhr.loaded / xhr.total * 100) + '% загружено');
        }, function (error) {
            console.error(error);
        });

        // Добавляем управление камерой
        const controls = new THREE.OrbitControls(camera, renderer.domElement);

        // Добавляем освещение на сцену
        const ambientLight = new THREE.AmbientLight(0xffffff, 1);
        scene.add(ambientLight);
        const light = new THREE.DirectionalLight(0xffffff, 1);
        light.position.set(1, 1, 1);
        scene.add(light);

        camera.position.z = 5;

        function animate() {
            requestAnimationFrame(animate);
            controls.update();
            renderer.render(scene, camera);
            if (mixer) {
                const delta = clock.getDelta();
                mixer.update(delta);
            }
        }

        // Находим кнопки по их идентификаторам
        const playButton = document.getElementById('play');
        const backward  = document.getElementById('backward');
        const forward  = document.getElementById('forward');

        // Обработчик нажатия на кнопку "Pause"
        playButton.addEventListener('click', function () {
            action.paused = !action.paused;
            playButton.innerHTML = (action.paused ? "Play" : "Pause");
        });


        backward.addEventListener('click', () => {
            action.time = action.time - 1;
        });
        forward.addEventListener('click', () => {
            action.time = action.time + 1;
        })
        animate();
    });
</script>
