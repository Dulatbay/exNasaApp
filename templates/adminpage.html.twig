{% extends 'base.html.twig' %}

{% block body %}
    <h1>List of Users</h1>
    <table class="table">
        <thead>
        <tr>
            <th>Username</th>
            <th>Email</th>
            {% if is_granted('ROLE_ADMIN') %}
                <th>Actions</th>
            {% endif %}
        </tr>
        </thead>
        <tbody>
        {% for user in pagination %}
            <tr>

                <td> {% if user.id == app.user.id %} YOU - {% endif %} {{ user.username }}</td>
                <td>{{ user.email }}</td>
                <td>
                    {% if user.id != app.user.id %}
                        {% if is_granted('ROLE_ADMIN') %}
                            <div class="btn-group">

                                <a href="{{ path('user_delete', {'id': user.id}) }}"
                                   class="btn btn-danger btn-sm js-delete-user">Delete</a>
                            </div>
                        {% endif %}
                        {% if user.isBanned %}
                            <a href="{{ path('user_toggle', {'id': user.id}) }}"
                               class="btn btn-warning btn-sm js-toggle-user"
                            >Disable</a>
                        {% else %}
                            <a href="{{ path('user_toggle', {'id': user.id}) }}"
                               class="btn btn-success btn-sm js-toggle-user">Enable</a>
                        {% endif %}
                        <a href="{{ path('user_edit', {'id': user.id}) }}" class="btn btn-info btn-sm js-edit-user"
                           data-user-id="{{ user.id }}">Edit</a>
                    {% endif %}
                    <form class="d-none js-edit-user-form">
                        <div class="form-group">
                            <label for="{{ user.id }}">New Password</label>
                            <input type="password" class="form-control" id="{{ user.id }}" name="password">
                        </div>
                        <button type="submit" class="btn btn-primary js-submit-edit-user">Save</button>
                    </form>
                </td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    {{ knp_pagination_render(pagination) }}
{% endblock %}

{% block scripts %}
    <script>
        const deleteButtons = document.querySelectorAll('.js-delete-user');
        deleteButtons.forEach(button => {
            button.addEventListener('click', e => {
                e.preventDefault();
                if (confirm('Are you sure you want to delete this user?')) {
                    const url = button.getAttribute('href');
                    const row = button.closest('tr');
                    fetch(url, {
                        method: 'DELETE',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest',
                            'Content-Type': 'application/json'
                        }
                    }).then(response => {
                        if (response.ok) {
                            row.remove();
                        } else {
                            alert('Unable to delete the user. Please try again later.');
                        }
                    }).catch(() => {
                        alert('Unable to delete the user. Please try again later.');
                    });
                }
            });
        });
        const toggleButtons = document.querySelectorAll('.js-toggle-user');
        toggleButtons.forEach(button => {
            button.addEventListener('click', e => {
                e.preventDefault();

                const url = button.getAttribute('href');
                const row = button.closest('tr');

                fetch(url, {
                    method: 'PUT',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Content-Type': 'application/json'
                    }
                }).then(response => {
                    if (response.ok) {
                        button.classList.toggle('btn-success');
                        button.classList.toggle('btn-warning');
                        if (button.classList.contains('btn-success')) {
                            button.textContent = 'Enable';
                        } else {
                            button.textContent = 'Disable';
                        }
                    } else {
                        alert('Unable to toggle user status. Please try again later.');
                    }
                }).catch(() => {
                    alert('Unable to toggle user status. Please try again later.');
                });
            });
        });
        const editButtons = document.querySelectorAll('.js-edit-user');

        editButtons.forEach(button => {
            button.addEventListener('click', e => {
                e.preventDefault();
                // hide all other edit forms
                document.querySelectorAll('.js-edit-user-form:not(.d-none)').forEach(form => {
                    form.classList.add('d-none');
                });

                // show the current edit form
                const form = button.nextElementSibling;
                form.classList.remove('d-none');
            });
        });

        const editForms = document.querySelectorAll('.js-edit-user-form');

        editForms.forEach(form => {
            form.addEventListener('submit', e => {
                e.preventDefault();

                const url = form.closest('tr').querySelector('.js-delete-user').getAttribute('href');
                const formData = new FormData(form);
                const password = formData.get('password')
                fetch(url, {
                    method: 'PATCH',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({password})
                }).then(response => {
                    if (response.ok) {
                        // reload the page to show the updated user list
                        console.log(response.json())
                    } else {
                        alert('Error: ' + response.statusText);
                    }
                });
            })
        });
    </script>

{% endblock %}
